<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>about</title>
  <style>
    html {
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      overflow-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 12px;
      }
      h1 {
        font-size: 1.8em;
      }
    }
    @media print {
      html {
        background-color: white;
      }
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    svg {
      height: auto;
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li > ol, li > ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, Consolas, 'Lucida Console', monospace;
      font-size: 85%;
      margin: 0;
      hyphens: manual;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
      overflow-wrap: normal;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC ul {
      padding-left: 1.3em;
    }
    #TOC > ul {
      padding-left: 0;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    /* The extra [class] is a hack that increases specificity enough to
       override a similar rule in reveal.js */
    ul.task-list[class]{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      font-size: inherit;
      width: 0.8em;
      margin: 0 0.8em 0.2em -1.6em;
      vertical-align: middle;
    }
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
  </style>
</head>
<body>
<h1 id="about-rolldown">About Rolldown</h1>
<h2 id="tldr">TL;DR</h2>
<p>Rolldown is a JavaScript bundler written in Rust intended to serve as
the future bundler used in <a href="https://vitejs.dev/">Vite</a>. It
provides Rollup-compatible APIs and plugin interface, but will be more
similar to esbuild in scope.</p>
<p>:::warning ðŸš§ Work in Progress Rolldown is currently in active
development and not usable for production yet. but we are open sourcing
it now, so we can start collaborating with community contributors.
:::</p>
<h2 id="why-we-are-building-rolldown">Why we are building Rolldown</h2>
<p>Rolldown is designed to serve as the future lower-level bundler used
in <a href="https://vitejs.dev/">Vite</a>.</p>
<p>Currently, Vite relies on two bundlers internally:</p>
<ul>
<li><p><a href="https://github.com/evanw/esbuild">esbuild</a>, created
by <a href="https://github.com/evanw">Evan Wallace</a>. Vite uses
esbuild for <a
href="https://vitejs.dev/guide/dep-pre-bundling">Dependency
Pre-Bundling</a>, TypeScript / JSX transforms, target lowering, and
minification.</p></li>
<li><p><a href="https://github.com/rollup/rollup">Rollup</a>, created by
<a href="https://github.com/Rich-Harris">Rich Harris</a> and maintained
by <a href="https://github.com/lukastaegert">Lukas Taegert-Atkinson</a>.
Vite uses Rollup for its production builds, and supports a
Rollup-compatible plugin interface.</p></li>
</ul>
<p>Vite <strong>has to</strong> use two different bundlers because while
both are amazing, they each lack something the other provides:</p>
<ul>
<li><p>esbuild is blazing fast and feature rich, but its output,
especially in terms of chunk splitting limitations, is not ideal for
bundling applications.</p></li>
<li><p>Rollup is mature and battle tested for bundling applications, but
is significantly slower than bundlers written in compile-to-native
languages.</p></li>
</ul>
<p>Having to use two different bundlers is suboptimal in several
ways:</p>
<ul>
<li><p>Subtle differences between the output can cause behavior
differences between development and production builds.</p></li>
<li><p>User source is repeatedly parsed, transformed, and serialized by
different tools throughout the production build, leading to a lot of
overhead that can be avoided.</p></li>
</ul>
<p>Ideally, we hope Vite can leverage a single bundler that provides
native-level performance, built-in transforms that avoid parsing /
serialization overhead, compatible plugin interface with Rollup, and
advanced build output control that is suitable for large scale
applications.</p>
<p><strong>This is why we are building Rolldown.</strong></p>
<p>Rolldown is written in <a href="https://www.rust-lang.org/">Rust</a>
and built on top of <a href="https://oxc-project.github.io/">Oxc</a>,
currently leveraging its parser and resolver. We also plan to leverage
Oxcâ€™s transformer and minifier when they become available in the
future.</p>
<p>Our long term goal is for Vite users (directly or indirectly through
a framework) to be able to transition to a Vite version that uses
Rolldown internally with minimal friction.</p>
<p>At the same time, Rolldown will also be directly usable as a
standalone bundler.</p>
<h2 id="rollup-compatibility-difference">Rollup compatibility &amp;
difference</h2>
<p>Rolldown aims to align with Rollupâ€™s API and plugin interface as much
as possible to ease adoption. In simple use cases, it will likely be
able to serve as a drop-in replacement. However, it is also likely that
there will be minor differences in edge cases, especially when advanced
options are involved.</p>
<p>We started with the intention of a JS to Rust port, but soon realized
that in order to achieve the best possible performance, we have to
prioritize writing code in a way that aligns with how Rust works. The
internal architecture of Rolldown is closer to that of esbuild rather
than Rollup, and our chunk splitting logic may end up being different
from that of Rollupâ€™s.</p>
<p>Rolldownâ€™s scope is also larger than Rollupâ€™s and more similar to
esbuild. It comes with built-in CommonJS support,
<code>node_modules</code> resolution, and will also support TypeScript /
JSX transforms and minification in the future.</p>
<h2 id="roadmap">Roadmap</h2>
<p>Check out the <a
href="https://github.com/rolldown/rolldown/discussions/153">Roadmap</a>
on GitHub discussions.</p>
<h2 id="join-us">Join Us!</h2>
<p>Rolldown is still in early stage. We have a lot of ground to cover,
and we wonâ€™t be able to do this without the help from community
contributors. We are also actively looking for more team members with
long term commitment in improving JavaScript tooling with Rust.</p>
<h3 id="useful-links">Useful Links</h3>
<ul>
<li><a href="https://github.com/rolldown/rolldown">GitHub</a></li>
<li><a href="/contrib-guide/">Contribution Guide</a></li>
<li><a href="https://chat.rolldown.rs">Discord Chat</a></li>
</ul>
</body>
</html>
