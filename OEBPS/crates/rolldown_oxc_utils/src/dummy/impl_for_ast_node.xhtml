<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>impl_for_ast_node</title>
  <style>
    html {
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      overflow-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 12px;
      }
      h1 {
        font-size: 1.8em;
      }
    }
    @media print {
      html {
        background-color: white;
      }
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    svg {
      height: auto;
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li > ol, li > ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, Consolas, 'Lucida Console', monospace;
      font-size: 85%;
      margin: 0;
      hyphens: manual;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
      overflow-wrap: normal;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC ul {
      padding-left: 1.3em;
    }
    #TOC > ul {
      padding-left: 0;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    /* The extra [class] is a hack that increases specificity enough to
       override a similar rule in reveal.js */
    ul.task-list[class]{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      font-size: inherit;
      width: 0.8em;
      margin: 0 0.8em 0.2em -1.6em;
      vertical-align: middle;
    }
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
    /* CSS for syntax highlighting */
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { color: #008000; } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { color: #008000; font-weight: bold; } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  </style>
</head>
<body>
<div class="sourceCode" id="cb1"><pre class="sourceCode rs"><code class="sourceCode rust"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">use</span> <span class="pp">std::cell::</span>Cell<span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">use</span> <span class="pp">oxc::</span><span class="op">{</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  <span class="pp">allocator::</span><span class="op">{</span>Allocator<span class="op">,</span> <span class="dt">Box</span><span class="op">},</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  <span class="pp">ast::ast::</span><span class="op">{</span><span class="kw">self</span><span class="op">,</span> Modifiers<span class="op">},</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  <span class="pp">semantic::</span>ReferenceFlag<span class="op">,</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  <span class="pp">span::</span><span class="op">{</span>Atom<span class="op">,</span> SourceType<span class="op">},</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  syntax<span class="op">,</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="op">};</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="kw">use</span> <span class="kw">crate</span><span class="pp">::</span>Dummy <span class="kw">as</span> DummyIn<span class="op">;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>VariableDeclarationKind <span class="op">{</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>Var</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ThisExpression <span class="op">{</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc) <span class="op">}</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>VariableDeclaration<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>      kind<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>      declarations<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>      modifiers<span class="op">:</span> <span class="pp">Modifiers::</span><span class="kw">default</span>()<span class="op">,</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>Declaration<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>VariableDeclaration(<span class="dt">Box</span>(alloc<span class="op">.</span>alloc(<span class="pp">DummyIn::</span>dummy(alloc))))</span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ExpressionStatement<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> expression<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc) <span class="op">}</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>FunctionType <span class="op">{</span></span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>FunctionDeclaration</span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>FormalParameterKind <span class="op">{</span></span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>Signature</span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>FormalParameters<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>      kind<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>      items<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a>      rest<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ClassBody<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> body<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc) <span class="op">}</span></span>
<span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ClassType <span class="op">{</span></span>
<span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>ClassDeclaration</span>
<span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>Modifiers<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>empty()</span>
<span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>Class<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-84"><a href="#cb1-84" aria-hidden="true" tabindex="-1"></a>      <span class="an">r#</span>type<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-85"><a href="#cb1-85" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-86"><a href="#cb1-86" aria-hidden="true" tabindex="-1"></a>      id<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-87"><a href="#cb1-87" aria-hidden="true" tabindex="-1"></a>      super_class<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-88"><a href="#cb1-88" aria-hidden="true" tabindex="-1"></a>      body<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-89"><a href="#cb1-89" aria-hidden="true" tabindex="-1"></a>      type_parameters<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-90"><a href="#cb1-90" aria-hidden="true" tabindex="-1"></a>      super_type_parameters<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-91"><a href="#cb1-91" aria-hidden="true" tabindex="-1"></a>      implements<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-92"><a href="#cb1-92" aria-hidden="true" tabindex="-1"></a>      decorators<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-93"><a href="#cb1-93" aria-hidden="true" tabindex="-1"></a>      modifiers<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-94"><a href="#cb1-94" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-95"><a href="#cb1-95" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-96"><a href="#cb1-96" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-97"><a href="#cb1-97" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>Function<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-98"><a href="#cb1-98" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-99"><a href="#cb1-99" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-100"><a href="#cb1-100" aria-hidden="true" tabindex="-1"></a>      <span class="an">r#</span>type<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-101"><a href="#cb1-101" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-102"><a href="#cb1-102" aria-hidden="true" tabindex="-1"></a>      id<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-103"><a href="#cb1-103" aria-hidden="true" tabindex="-1"></a>      generator<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-104"><a href="#cb1-104" aria-hidden="true" tabindex="-1"></a>      <span class="an">r#</span>async<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-105"><a href="#cb1-105" aria-hidden="true" tabindex="-1"></a>      params<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-106"><a href="#cb1-106" aria-hidden="true" tabindex="-1"></a>      body<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-107"><a href="#cb1-107" aria-hidden="true" tabindex="-1"></a>      type_parameters<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-108"><a href="#cb1-108" aria-hidden="true" tabindex="-1"></a>      return_type<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-109"><a href="#cb1-109" aria-hidden="true" tabindex="-1"></a>      modifiers<span class="op">:</span> <span class="pp">Modifiers::</span><span class="kw">default</span>()<span class="op">,</span></span>
<span id="cb1-110"><a href="#cb1-110" aria-hidden="true" tabindex="-1"></a>      this_param<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-111"><a href="#cb1-111" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-112"><a href="#cb1-112" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-113"><a href="#cb1-113" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-114"><a href="#cb1-114" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>Expression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-115"><a href="#cb1-115" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-116"><a href="#cb1-116" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>ThisExpression(<span class="dt">Box</span>(alloc<span class="op">.</span>alloc(<span class="pp">DummyIn::</span>dummy(alloc))))</span>
<span id="cb1-117"><a href="#cb1-117" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-118"><a href="#cb1-118" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-119"><a href="#cb1-119" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-120"><a href="#cb1-120" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>IdentifierName<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-121"><a href="#cb1-121" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-122"><a href="#cb1-122" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> name<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc) <span class="op">}</span></span>
<span id="cb1-123"><a href="#cb1-123" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-124"><a href="#cb1-124" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-125"><a href="#cb1-125" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-126"><a href="#cb1-126" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>StaticMemberExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-127"><a href="#cb1-127" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-128"><a href="#cb1-128" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-129"><a href="#cb1-129" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-130"><a href="#cb1-130" aria-hidden="true" tabindex="-1"></a>      object<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-131"><a href="#cb1-131" aria-hidden="true" tabindex="-1"></a>      property<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-132"><a href="#cb1-132" aria-hidden="true" tabindex="-1"></a>      optional<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-133"><a href="#cb1-133" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-134"><a href="#cb1-134" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-135"><a href="#cb1-135" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-136"><a href="#cb1-136" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-137"><a href="#cb1-137" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>IdentifierReference<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-138"><a href="#cb1-138" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-139"><a href="#cb1-139" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-140"><a href="#cb1-140" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-141"><a href="#cb1-141" aria-hidden="true" tabindex="-1"></a>      name<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-142"><a href="#cb1-142" aria-hidden="true" tabindex="-1"></a>      reference_id<span class="op">:</span> <span class="pp">Cell::</span><span class="kw">default</span>()<span class="op">,</span></span>
<span id="cb1-143"><a href="#cb1-143" aria-hidden="true" tabindex="-1"></a>      reference_flag<span class="op">:</span> <span class="pp">ReferenceFlag::</span><span class="kw">default</span>()<span class="op">,</span></span>
<span id="cb1-144"><a href="#cb1-144" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-145"><a href="#cb1-145" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-146"><a href="#cb1-146" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-147"><a href="#cb1-147" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-148"><a href="#cb1-148" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>Program<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-149"><a href="#cb1-149" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-150"><a href="#cb1-150" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-151"><a href="#cb1-151" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-152"><a href="#cb1-152" aria-hidden="true" tabindex="-1"></a>      source_type<span class="op">:</span> <span class="pp">SourceType::</span><span class="kw">default</span>()<span class="op">,</span></span>
<span id="cb1-153"><a href="#cb1-153" aria-hidden="true" tabindex="-1"></a>      directives<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-154"><a href="#cb1-154" aria-hidden="true" tabindex="-1"></a>      hashbang<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-155"><a href="#cb1-155" aria-hidden="true" tabindex="-1"></a>      body<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-156"><a href="#cb1-156" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-157"><a href="#cb1-157" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-158"><a href="#cb1-158" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-159"><a href="#cb1-159" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-160"><a href="#cb1-160" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>VariableDeclarator<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-161"><a href="#cb1-161" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-162"><a href="#cb1-162" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-163"><a href="#cb1-163" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-164"><a href="#cb1-164" aria-hidden="true" tabindex="-1"></a>      kind<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-165"><a href="#cb1-165" aria-hidden="true" tabindex="-1"></a>      id<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-166"><a href="#cb1-166" aria-hidden="true" tabindex="-1"></a>      init<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-167"><a href="#cb1-167" aria-hidden="true" tabindex="-1"></a>      definite<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-168"><a href="#cb1-168" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-169"><a href="#cb1-169" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-170"><a href="#cb1-170" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-171"><a href="#cb1-171" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-172"><a href="#cb1-172" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>BindingPattern<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-173"><a href="#cb1-173" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-174"><a href="#cb1-174" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-175"><a href="#cb1-175" aria-hidden="true" tabindex="-1"></a>      kind<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-176"><a href="#cb1-176" aria-hidden="true" tabindex="-1"></a>      type_annotation<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-177"><a href="#cb1-177" aria-hidden="true" tabindex="-1"></a>      optional<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-178"><a href="#cb1-178" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-179"><a href="#cb1-179" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-180"><a href="#cb1-180" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-181"><a href="#cb1-181" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-182"><a href="#cb1-182" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>BindingPatternKind<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-183"><a href="#cb1-183" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-184"><a href="#cb1-184" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>BindingIdentifier(<span class="pp">DummyIn::</span>dummy(alloc))</span>
<span id="cb1-185"><a href="#cb1-185" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-186"><a href="#cb1-186" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-187"><a href="#cb1-187" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-188"><a href="#cb1-188" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>BindingIdentifier<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-189"><a href="#cb1-189" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-190"><a href="#cb1-190" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> name<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> symbol_id<span class="op">:</span> <span class="pp">Cell::</span><span class="kw">default</span>() <span class="op">}</span></span>
<span id="cb1-191"><a href="#cb1-191" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-192"><a href="#cb1-192" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-193"><a href="#cb1-193" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-194"><a href="#cb1-194" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> Atom<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-195"><a href="#cb1-195" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-196"><a href="#cb1-196" aria-hidden="true" tabindex="-1"></a>    <span class="pp">Atom::</span>from(<span class="st">&quot;&quot;</span>)</span>
<span id="cb1-197"><a href="#cb1-197" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-198"><a href="#cb1-198" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-199"><a href="#cb1-199" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-200"><a href="#cb1-200" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>CallExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-201"><a href="#cb1-201" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-202"><a href="#cb1-202" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-203"><a href="#cb1-203" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-204"><a href="#cb1-204" aria-hidden="true" tabindex="-1"></a>      callee<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-205"><a href="#cb1-205" aria-hidden="true" tabindex="-1"></a>      arguments<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-206"><a href="#cb1-206" aria-hidden="true" tabindex="-1"></a>      optional<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-207"><a href="#cb1-207" aria-hidden="true" tabindex="-1"></a>      type_parameters<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-208"><a href="#cb1-208" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-209"><a href="#cb1-209" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-210"><a href="#cb1-210" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-211"><a href="#cb1-211" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-212"><a href="#cb1-212" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ArrowFunctionExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-213"><a href="#cb1-213" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-214"><a href="#cb1-214" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-215"><a href="#cb1-215" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-216"><a href="#cb1-216" aria-hidden="true" tabindex="-1"></a>      expression<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-217"><a href="#cb1-217" aria-hidden="true" tabindex="-1"></a>      <span class="an">r#</span>async<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-218"><a href="#cb1-218" aria-hidden="true" tabindex="-1"></a>      params<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-219"><a href="#cb1-219" aria-hidden="true" tabindex="-1"></a>      body<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-220"><a href="#cb1-220" aria-hidden="true" tabindex="-1"></a>      type_parameters<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-221"><a href="#cb1-221" aria-hidden="true" tabindex="-1"></a>      return_type<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-222"><a href="#cb1-222" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-223"><a href="#cb1-223" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-224"><a href="#cb1-224" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-225"><a href="#cb1-225" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-226"><a href="#cb1-226" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>FunctionBody<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-227"><a href="#cb1-227" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-228"><a href="#cb1-228" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-229"><a href="#cb1-229" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-230"><a href="#cb1-230" aria-hidden="true" tabindex="-1"></a>      directives<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-231"><a href="#cb1-231" aria-hidden="true" tabindex="-1"></a>      statements<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-232"><a href="#cb1-232" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-233"><a href="#cb1-233" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-234"><a href="#cb1-234" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-235"><a href="#cb1-235" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-236"><a href="#cb1-236" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>FormalParameter<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-237"><a href="#cb1-237" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-238"><a href="#cb1-238" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-239"><a href="#cb1-239" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-240"><a href="#cb1-240" aria-hidden="true" tabindex="-1"></a>      pattern<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-241"><a href="#cb1-241" aria-hidden="true" tabindex="-1"></a>      accessibility<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-242"><a href="#cb1-242" aria-hidden="true" tabindex="-1"></a>      readonly<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-243"><a href="#cb1-243" aria-hidden="true" tabindex="-1"></a>      decorators<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-244"><a href="#cb1-244" aria-hidden="true" tabindex="-1"></a>      <span class="an">r#</span>override<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-245"><a href="#cb1-245" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-246"><a href="#cb1-246" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-247"><a href="#cb1-247" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-248"><a href="#cb1-248" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-249"><a href="#cb1-249" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>SequenceExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-250"><a href="#cb1-250" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-251"><a href="#cb1-251" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> expressions<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc) <span class="op">}</span></span>
<span id="cb1-252"><a href="#cb1-252" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-253"><a href="#cb1-253" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-254"><a href="#cb1-254" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-255"><a href="#cb1-255" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ParenthesizedExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-256"><a href="#cb1-256" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-257"><a href="#cb1-257" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span> span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span> expression<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc) <span class="op">}</span></span>
<span id="cb1-258"><a href="#cb1-258" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-259"><a href="#cb1-259" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-260"><a href="#cb1-260" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-261"><a href="#cb1-261" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>AssignmentExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-262"><a href="#cb1-262" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-263"><a href="#cb1-263" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-264"><a href="#cb1-264" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-265"><a href="#cb1-265" aria-hidden="true" tabindex="-1"></a>      operator<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-266"><a href="#cb1-266" aria-hidden="true" tabindex="-1"></a>      left<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-267"><a href="#cb1-267" aria-hidden="true" tabindex="-1"></a>      right<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-268"><a href="#cb1-268" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-269"><a href="#cb1-269" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-270"><a href="#cb1-270" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-271"><a href="#cb1-271" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-272"><a href="#cb1-272" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">syntax::operator::</span>AssignmentOperator <span class="op">{</span></span>
<span id="cb1-273"><a href="#cb1-273" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-274"><a href="#cb1-274" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>Assign</span>
<span id="cb1-275"><a href="#cb1-275" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-276"><a href="#cb1-276" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-277"><a href="#cb1-277" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-278"><a href="#cb1-278" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>AssignmentTarget<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-279"><a href="#cb1-279" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-280"><a href="#cb1-280" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>SimpleAssignmentTarget(<span class="pp">DummyIn::</span>dummy(alloc))</span>
<span id="cb1-281"><a href="#cb1-281" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-282"><a href="#cb1-282" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-283"><a href="#cb1-283" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-284"><a href="#cb1-284" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>SimpleAssignmentTarget<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-285"><a href="#cb1-285" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-286"><a href="#cb1-286" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>AssignmentTargetIdentifier(<span class="pp">DummyIn::</span>dummy(alloc))</span>
<span id="cb1-287"><a href="#cb1-287" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-288"><a href="#cb1-288" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-289"><a href="#cb1-289" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-290"><a href="#cb1-290" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ArrayAssignmentTarget<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-291"><a href="#cb1-291" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-292"><a href="#cb1-292" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-293"><a href="#cb1-293" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-294"><a href="#cb1-294" aria-hidden="true" tabindex="-1"></a>      elements<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-295"><a href="#cb1-295" aria-hidden="true" tabindex="-1"></a>      rest<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-296"><a href="#cb1-296" aria-hidden="true" tabindex="-1"></a>      trailing_comma<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-297"><a href="#cb1-297" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-298"><a href="#cb1-298" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-299"><a href="#cb1-299" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-300"><a href="#cb1-300" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-301"><a href="#cb1-301" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ObjectAssignmentTarget<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-302"><a href="#cb1-302" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-303"><a href="#cb1-303" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-304"><a href="#cb1-304" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-305"><a href="#cb1-305" aria-hidden="true" tabindex="-1"></a>      properties<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-306"><a href="#cb1-306" aria-hidden="true" tabindex="-1"></a>      rest<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-307"><a href="#cb1-307" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-308"><a href="#cb1-308" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-309"><a href="#cb1-309" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-310"><a href="#cb1-310" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-311"><a href="#cb1-311" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>AssignmentTargetWithDefault<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-312"><a href="#cb1-312" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-313"><a href="#cb1-313" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-314"><a href="#cb1-314" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-315"><a href="#cb1-315" aria-hidden="true" tabindex="-1"></a>      binding<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-316"><a href="#cb1-316" aria-hidden="true" tabindex="-1"></a>      init<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-317"><a href="#cb1-317" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-318"><a href="#cb1-318" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-319"><a href="#cb1-319" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-320"><a href="#cb1-320" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-321"><a href="#cb1-321" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ObjectExpression<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-322"><a href="#cb1-322" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-323"><a href="#cb1-323" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-324"><a href="#cb1-324" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-325"><a href="#cb1-325" aria-hidden="true" tabindex="-1"></a>      properties<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-326"><a href="#cb1-326" aria-hidden="true" tabindex="-1"></a>      trailing_comma<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-327"><a href="#cb1-327" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-328"><a href="#cb1-328" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-329"><a href="#cb1-329" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-330"><a href="#cb1-330" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-331"><a href="#cb1-331" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ObjectProperty<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-332"><a href="#cb1-332" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-333"><a href="#cb1-333" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-334"><a href="#cb1-334" aria-hidden="true" tabindex="-1"></a>      span<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-335"><a href="#cb1-335" aria-hidden="true" tabindex="-1"></a>      kind<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-336"><a href="#cb1-336" aria-hidden="true" tabindex="-1"></a>      key<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-337"><a href="#cb1-337" aria-hidden="true" tabindex="-1"></a>      value<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-338"><a href="#cb1-338" aria-hidden="true" tabindex="-1"></a>      init<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-339"><a href="#cb1-339" aria-hidden="true" tabindex="-1"></a>      method<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-340"><a href="#cb1-340" aria-hidden="true" tabindex="-1"></a>      shorthand<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-341"><a href="#cb1-341" aria-hidden="true" tabindex="-1"></a>      computed<span class="op">:</span> <span class="pp">DummyIn::</span>dummy(alloc)<span class="op">,</span></span>
<span id="cb1-342"><a href="#cb1-342" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-343"><a href="#cb1-343" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-344"><a href="#cb1-344" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-345"><a href="#cb1-345" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-346"><a href="#cb1-346" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>ObjectPropertyKind<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-347"><a href="#cb1-347" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-348"><a href="#cb1-348" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>ObjectProperty(<span class="pp">DummyIn::</span>dummy(alloc))</span>
<span id="cb1-349"><a href="#cb1-349" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-350"><a href="#cb1-350" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-351"><a href="#cb1-351" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-352"><a href="#cb1-352" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>PropertyKind <span class="op">{</span></span>
<span id="cb1-353"><a href="#cb1-353" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(_alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-354"><a href="#cb1-354" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>Init</span>
<span id="cb1-355"><a href="#cb1-355" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-356"><a href="#cb1-356" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-357"><a href="#cb1-357" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-358"><a href="#cb1-358" aria-hidden="true" tabindex="-1"></a><span class="kw">impl</span><span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> DummyIn<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="cf">for</span> <span class="pp">ast::</span>PropertyKey<span class="op">&lt;</span><span class="ot">&#39;ast</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-359"><a href="#cb1-359" aria-hidden="true" tabindex="-1"></a>  <span class="kw">fn</span> dummy(alloc<span class="op">:</span> <span class="op">&amp;</span><span class="ot">&#39;ast</span> Allocator) <span class="op">-&gt;</span> <span class="dt">Self</span> <span class="op">{</span></span>
<span id="cb1-360"><a href="#cb1-360" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Self</span><span class="pp">::</span>Identifier(<span class="pp">DummyIn::</span>dummy(alloc))</span>
<span id="cb1-361"><a href="#cb1-361" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-362"><a href="#cb1-362" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
</body>
</html>
